// ЛР-14.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
using namespace std;

// Функція для заповнення масиву за заданим правилом
void fillArray(int arr[], int size) {
    int num = 100000; // Початкове шестизначне число

    for (int i = 0; i < size; i++) {
        // Знаходимо наступне шестизначне число, яке задовольняє умову
        do {
            num++;
        } while ((num / 100000 + num / 10000 % 10 + num / 1000 % 10) != (num / 100 % 10 + num / 10 % 10 + num % 10));

        arr[i] = num; // Заповнюємо масив
    }
}

// Функція інтерполяційного пошуку
int interpolationSearch(int arr[], int size, int key) {
    int low = 0;
    int high = size - 1;

    while (low <= high && key >= arr[low] && key <= arr[high]) {
        // Використовуємо формулу інтерполяційного пошуку
        int pos = low + ((double)(high - low) / (arr[high] - arr[low])) * (key - arr[low]);

        if (arr[pos] == key)
            return pos; // Знайдено

        if (arr[pos] < key)
            low = pos + 1; // Переходимо праворуч

        else
            high = pos - 1; // Переходимо ліворуч
    }

    return -1; // Не знайдено
}

int main() {
    const int size = 100;
    int arr[size];

    fillArray(arr, size);

    // Виведення масиву для перевірки
    cout << "Масив згенерованих чисел:" << endl;
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
        if ((i + 1) % 10 == 0) // Кожні 10 елементів переносимо на новий рядок
            cout << endl;
    }
    cout << endl;

    // Введення числа, яке потрібно знайти
    int key;
    cout << "Введіть число для пошуку: ";
    cin >> key;

    // Пошук та виведення результату
    int result = interpolationSearch(arr, size, key);
    if (result != -1)
        cout << "Число " << key << " знаходиться на позиції " << result + 1 << " у масиві." << endl;
    else
        cout << "Число " << key << " не знайдено у масиві." << endl;

    return 0;
}


// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
